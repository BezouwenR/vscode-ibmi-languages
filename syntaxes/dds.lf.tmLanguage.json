{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "DDS.LF",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.dds.lf",
					"match": "(((?i)^[\\s]{0,5}.))(\\*).*"
				}
			]
		},
		"constants": {
			"patterns": [
				{
                    "name": "constant.other.dds.lf",
                    "match": "[*][a-zA-Z][a-zA-Z0-9]*"
                },
				{
					"name": "constant.language.dds.lf.nametype",
					"match": "(?i)(?<=((?<=^[\\s]{5}[A|\\s]).{10}))(R|K|J|S|O)"
				},
				{
					"name": "constant.language.dds.lf.ref",
					"match": "(?i)(?<=((?<=^[\\s]{5}[A|\\s]).{22}))R"
				},
				{
					"name": "constant.language.dds.lf.len",
					"match": "(?i)(?<=((?<=^[\\s]{5}[A|\\s]).{23}))[0-9|\\s]{5}"
				},
				{
					"name": "constant.language.dds.lf.datatype",
					"match": "(?i)(?<=((?<=^[\\s]{5}[A|\\s]).{28}))(P|S|B|F|A|L|T|Z|H|J|E|O|G|5)"
				},
				{
					"name": "constant.language.dds.lf.decpos",
					"match": "(?i)(?<=((?<=^[\\s]{5}[A|\\s]).{29}))[0-9|\\s]{2}"
				},
				{
					"name": "constant.language.dds.lf.use",
					"match": "(?i)(?<=((?<=^[\\s]{5}[A|\\s]).{31}))(B|I|N)"
				},
                {
                    "name": "constant.numeric.dds.lf",
                    "match": "(\\b[0-9]+)|([0-9]*[.][0-9]*)"
                }
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.other.dds.lf.spec",
					"match": "(?i)(^[\\s]{5}A)"
				},
				{
					"name": "keyword.operator.dds.lf",
					"match": "\\+"
				},
				{
					"name": "keyword.other.dds.lf.funcs",
					"match": "(?i)(?<=((?<=^[\\s]{5}[A|\\s]).{38}))((ZONE|VARLEN|VALUES|UNSIGNED|UNIQUE|TIMSEP|TIMFMT|TEXT|SST|RENAME|REFSHIFT|REFACCPTH|RANGE|PFILE|NOALTSEQ|LIFO|JREF|JOIN|JFLD|JFILE|JDUPSEQ|JDFTVAL|FORMAT|FLTPCN|FIFO|FCFO|EDTCDE|EDTWRD|DYNSLT|DIGIT|DESCEND|DATSEP|DATFMT|CONCAT|COMP|COLHDG|CMP|CHKMSGID|CHECK|CCSID|ALTSEQ|ALL|ALIAS|ABSVAL)+)"
				},
				{
					"name": "dds.lf.comp",
					"begin": "(?i)((?<=((COMP)\\())|(?<=((CMP)\\()))",
					"end": "(?=(\\)))",
					"patterns": [
						{
							"name": "keyword.operator.dds.lf.comp.values",
							"match": "(?i)(\\b(GE|LE|NG|GT|NL|LT|NE|EQ)\\b)"
						},
						{
							"name": "constant.numeric.dds.lf",
							"match": "\\b([0-9]+)\\b"
						}
					]
				}
			]
		},
		"strings": {
			"name": "string.quoted.single.dds.lf",
			"begin": "'",
			"end": "(\n|')",
			"patterns": [
				{
					"name": "keyword.other.dds.lf.spec",
					"match": "(?i)^[\\s]{5}(A|\\s)"
				}
			]
		}
	},
	"scopeName": "source.dds.lf"
}